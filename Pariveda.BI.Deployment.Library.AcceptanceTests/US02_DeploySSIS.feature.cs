// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Pariveda.BI.Deployment.Library.AcceptanceTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("US01 Deploy BI Files")]
    public partial class US01DeployBIFilesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "US02_DeploySSIS.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "US01 Deploy BI Files", "\r\nAs a business intelligence developer\r\nI want to build a deployment manifest tha" +
                    "t has all my BI artifacts\r\nso that I deploy them to different servers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
 testRunner.Given("I have a ticket number 02");
#line 9
 testRunner.And("the project name is \"BI Project\"");
#line 10
 testRunner.And("I have selected the deployment path of C:\\DeploymentsTemp\\");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Server",
                        "Name",
                        "Type",
                        "Deploy",
                        "Path"});
            table1.AddRow(new string[] {
                        "",
                        "Package1",
                        "SSIS",
                        "true",
                        "C:\\DeploymentsTemp\\SSISToDeploy\\Package1.dtsx"});
            table1.AddRow(new string[] {
                        "",
                        "Package2",
                        "SSIS",
                        "true",
                        "C:\\DeploymentsTemp\\SSISToDeploy\\Package2.dtsx"});
            table1.AddRow(new string[] {
                        "",
                        "Package3",
                        "SSIS",
                        "false",
                        "C:\\DeploymentsTemp\\SSISToDeploy\\Package3.dtsx"});
            table1.AddRow(new string[] {
                        "",
                        "Package4",
                        "SSIS",
                        "true",
                        "C:\\DeploymentsTemp\\SSISToDeploy\\Package4.dtsx"});
            table1.AddRow(new string[] {
                        "",
                        "Package5",
                        "SSIS",
                        "true",
                        "C:\\DeploymentsTemp\\SSISToDeploy\\Package5.dtsx"});
            table1.AddRow(new string[] {
                        "DW_DB_SERVER",
                        "DW_DB_Script",
                        "SQL",
                        "true",
                        "C:\\DeploymentsTemp\\SQLToDeploy\\DW_DB_Script.sql"});
            table1.AddRow(new string[] {
                        "DW_STAGING_DB_SERVER",
                        "DW_STAGING_DB_Script",
                        "SQL",
                        "false",
                        "C:\\DeploymentsTemp\\SQLToDeploy\\DW_STAGING_DB_Script.sql"});
            table1.AddRow(new string[] {
                        "CONFIG_DB_SERVER",
                        "CONFIG_DB_Script",
                        "SQL",
                        "true",
                        "C:\\DeploymentsTemp\\SQLToDeploy\\CONFIG_DB_Script.sql"});
            table1.AddRow(new string[] {
                        "LOGGING_DB_SERVER",
                        "LOGGING_DB_Script",
                        "SQL",
                        "true",
                        "C:\\DeploymentsTemp\\SQLToDeploy\\LOGGING_DB_Script.sql"});
            table1.AddRow(new string[] {
                        "JOB_DB_SERVER",
                        "JOB_DB_Script",
                        "SQL",
                        "true",
                        "C:\\DeploymentsTemp\\SQLToDeploy\\JOB_DB_Script.sql"});
#line 11
 testRunner.Given("I have the following Business Intelligence Deployables", ((string)(null)), table1);
#line 23
 testRunner.When("I press on the deploy button");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Folder Structure Setup")]
        public virtual void FolderStructureSetup()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Folder Structure Setup", ((string[])(null)));
#line 25
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 26
 testRunner.Then("a folder should be created");
#line 27
 testRunner.And("it should be named with the ticket number");
#line 28
 testRunner.And("there should be a Source folder");
#line 29
 testRunner.And("there should be a Rollback folder");
#line 30
 testRunner.And("there should be a DeployScripts folder");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Source Folder Setup")]
        public virtual void SourceFolderSetup()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Source Folder Setup", ((string[])(null)));
#line 32
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 33
 testRunner.Then("there should be a Source folder with a DB subfolder");
#line 34
 testRunner.And("there should be a Source folder with a MSDB subfolder");
#line 35
 testRunner.And("there should be a Source folder with a SSRS subfolder");
#line 36
 testRunner.And("there should be a Source folder with a SSAS subfolder");
#line 37
 testRunner.And("there should be a Source folder with a File subfolder");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Source DB Folder Setup")]
        public virtual void SourceDBFolderSetup()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Source DB Folder Setup", ((string[])(null)));
#line 39
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 40
 testRunner.Then("there should be a Source\\DB folder with a DW_DB_SERVER subfolder");
#line 41
 testRunner.And("there should be a Source\\DB folder with a DW_STAGING_DB_SERVER subfolder");
#line 42
 testRunner.And("there should be a Source\\DB folder with a CONFIG_DB_SERVER subfolder");
#line 43
 testRunner.And("there should be a Source\\DB folder with a LOGGING_DB_SERVER subfolder");
#line 44
 testRunner.And("there should be a Source\\DB folder with a JOB_DB_SERVER subfolder");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Rollback Folder Setup")]
        public virtual void RollbackFolderSetup()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rollback Folder Setup", ((string[])(null)));
#line 46
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 47
 testRunner.Then("there should be a Rollback folder with a DB subfolder");
#line 48
 testRunner.And("there should be a Rollback folder with a MSDB subfolder");
#line 49
 testRunner.And("there should be a Rollback folder with a SSRS subfolder");
#line 50
 testRunner.And("there should be a Rollback folder with a SSAS subfolder");
#line 51
 testRunner.And("there should be a Rollback folder with a File subfolder");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Rollback DB Folder Setup")]
        public virtual void RollbackDBFolderSetup()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rollback DB Folder Setup", ((string[])(null)));
#line 53
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 54
 testRunner.Then("there should be a Rollback\\DB folder with a DW_DB_SERVER subfolder");
#line 55
 testRunner.And("there should be a Rollback\\DB folder with a DW_STAGING_DB_SERVER subfolder");
#line 56
 testRunner.And("there should be a Rollback\\DB folder with a CONFIG_DB_SERVER subfolder");
#line 57
 testRunner.And("there should be a Rollback\\DB folder with a LOGGING_DB_SERVER subfolder");
#line 58
 testRunner.And("there should be a Rollback\\DB folder with a JOB_DB_SERVER subfolder");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Move SSIS Packages")]
        public virtual void MoveSSISPackages()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Move SSIS Packages", ((string[])(null)));
#line 61
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 62
 testRunner.Then("only packages marked for deployment should be placed in the manifest");
#line 63
 testRunner.And("the packages should be deployed to the Source\\MSDB and in the correct subpath fol" +
                    "der");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Move SQL Scripts")]
        public virtual void MoveSQLScripts()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Move SQL Scripts", ((string[])(null)));
#line 66
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 67
 testRunner.Then("only the SQL scripts marked for deployment should be placed in the manifest");
#line 68
 testRunner.And("the SQL scripts for the DW_DB_SERVER should be deployed to the Source\\DB\\DW_DB_SE" +
                    "RVER folder");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("DeployScripts Moved")]
        public virtual void DeployScriptsMoved()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("DeployScripts Moved", ((string[])(null)));
#line 70
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 71
 testRunner.Then("the deploy.ps1 file should be in the DeployScripts folder");
#line 72
 testRunner.And("the deploymentFunctions.ps1 file should be in the DeployScripts folder");
#line 73
 testRunner.And("the Deploy.bat file should be in the Deployment folder");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("DeployVariable Created")]
        public virtual void DeployVariableCreated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("DeployVariable Created", ((string[])(null)));
#line 75
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 76
 testRunner.Then("the deploymentVariables.ps1 file should be created in the DeploymentScripts folde" +
                    "r");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
